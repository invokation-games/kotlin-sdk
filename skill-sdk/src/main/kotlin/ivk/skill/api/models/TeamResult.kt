/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ivk.skill.api.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param beta Total uncertainty in team outcome
 * @param density The weighted team size
 * @param expected the expected team outcome based on party and team model (0-1) potentially clamped to a maximum value (typically 0.8) to guarantee minimum payoffs
 * @param id The local identifier of the team (passthrough)
 * @param idx Zero-indexed team index
 * @param mmr Total MMR of the team as determined by the party and team models (not necessarily the sum of MMRs)
 * @param outcome the team outcome (0-1) regardless of individual performance
 * @param partyCount Total parties in the team
 * @param propertySize Total player count the team has seen throughout the match
 * @param score Score of the team (passthrough)
 */


data class TeamResult (

    /* Total uncertainty in team outcome */
    @Json(name = "beta")
    val beta: kotlin.Double,

    /* The weighted team size */
    @Json(name = "density")
    val density: kotlin.Double,

    /* the expected team outcome based on party and team model (0-1) potentially clamped to a maximum value (typically 0.8) to guarantee minimum payoffs */
    @Json(name = "expected")
    val expected: kotlin.Double,

    /* The local identifier of the team (passthrough) */
    @Json(name = "id")
    val id: kotlin.String,

    /* Zero-indexed team index */
    @Json(name = "idx")
    val idx: kotlin.Int,

    /* Total MMR of the team as determined by the party and team models (not necessarily the sum of MMRs) */
    @Json(name = "mmr")
    val mmr: kotlin.Double,

    /* the team outcome (0-1) regardless of individual performance */
    @Json(name = "outcome")
    val outcome: kotlin.Double,

    /* Total parties in the team */
    @Json(name = "party_count")
    val partyCount: kotlin.Int,

    /* Total player count the team has seen throughout the match */
    @Json(name = "size")
    val propertySize: kotlin.Int,

    /* Score of the team (passthrough) */
    @Json(name = "score")
    val score: kotlin.Double? = null

) {


}

