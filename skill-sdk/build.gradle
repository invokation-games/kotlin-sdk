group = 'dev.ivk'
archivesBaseName = "ivk-skill-sdk"
version =  file("$projectDir/version.txt").text.trim()

buildscript {
    ext.kotlin_version = '1.9.23'
    ext.spotless_version = "6.25.0"

    repositories {
        maven { url "https://repo1.maven.org/maven2" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotless_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'com.diffplug.spotless'

repositories {
    maven { url "https://repo1.maven.org/maven2" }
}

// Use spotless plugin to automatically format code, remove unused import, etc
// To apply changes directly to the file, run `gradlew spotlessApply`
// Ref: https://github.com/diffplug/spotless/tree/main/plugin-gradle
spotless {
    // comment out below to run spotless as part of the `check` task
    enforceCheck false

    format 'misc', {
        // define the files (e.g. '*.gradle', '*.md') to apply `misc` to
        target '.gitignore'

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithSpaces() // Takes an integer argument if you don't like 4
        endWithNewline()
    }
    kotlin {
        ktfmt()
    }
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.0"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "com.squareup.moshi:moshi-kotlin:1.15.1"
    implementation "com.squareup.moshi:moshi-adapters:1.15.1"
    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    implementation("org.slf4j:slf4j-api:2.0.9")
    testImplementation "io.kotlintest:kotlintest-runner-junit5:3.4.2"
}

tasks.register('sourcesJar', Jar) {
    from sourceSets.main.allSource
    archiveClassifier.set('sources')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = project.archivesBaseName
            version = project.version

            from components.java
            artifact tasks.named('sourcesJar')

            pom {
                name.set("IVK Skill SDK")
                description.set("Kotlin SDK for the IVK Skill API with coroutine, blocking, and CompletableFuture APIs.")
                url.set("https://github.com/invokation-games/kotlin-sdk")
                licenses {
                    license {
                        name.set("Apache License 2.0")
                        url.set("https://www.apache.org/licenses/LICENSE-2.0")
                        distribution.set("repo")
                    }
                }
                developers {
                    developer {
                        id.set("ivk")
                        name.set("Robin Van Cauter")
                        email.set("robin@invokation.games")
                        organization.set("Invokation")
                        organizationUrl.set("https://invokation.games")
                    }
                }
                scm {
                    connection.set("scm:git:https://github.com/invokation-games/kotlin-sdk.git")
                    developerConnection.set("scm:git:ssh://git@github.com/invokation-games/kotlin-sdk.git")
                    url.set("https://github.com/invokation-games/kotlin-sdk")
                }
            }
        }
    }
    repositories {
        maven {
            name = 'GitHubPackages'
            def githubRepository = System.getenv('GITHUB_REPOSITORY') ?: 'invokation-games/kotlin-sdk'
            url = uri("https://maven.pkg.github.com/${githubRepository}")
            credentials {
                username = System.getenv('USERNAME') ?: System.getenv('GITHUB_ACTOR')
                password = System.getenv('TOKEN') ?: System.getenv('GITHUB_TOKEN')
            }
        }
    }
}
